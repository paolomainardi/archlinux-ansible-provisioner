---
- name: Create an aur_builder user to install aur packages without password
  tags: [system, paru]
  block:
    - name: Create the `aur_builder` user
      ansible.builtin.user:
        name: aur_builder
        create_home: yes
        group: wheel

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
        create: yes
        validate: "visudo -cf %s"

    - name: Allow the `aur_builder` user to run `sudo makepkg` without a password
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/makepkg"
        create: yes
        validate: "visudo -cf %s"

    - name: Detect if paru is installed
      stat: path=/usr/bin/paru
      register: paru

    - name: Checkout paru
      ansible.builtin.git:
        repo: "https://aur.archlinux.org/paru.git"
        dest: /tmp/paru
      become: yes
      become_user: aur_builder
      when: paru.stat.exists == false

    - name: Build and install paru
      shell: makepkg -si --noconfirm
      args:
        chdir: /tmp/paru
      become: yes
      become_user: aur_builder
      when: paru.stat.exists == false

- name: Install and setup reflector
  tags: [system, pacman]
  block:
    - name: Install reflector
      community.general.pacman:
        name:
          - reflector
    - name: Enable reflector weekly
      shell: systemctl enable reflector.timer

- name: Install system packages
  community.general.pacman:
    name:
      - btrfs-progs
      - coreutils
      - efibootmgr
      - git
      - grub-btrfs
      - nvme-cli
      - os-prober
      - procps-ng
      - ntfs-3g
      - sudo
      - udisks2
      - util-linux
    state: present
    update_cache: yes

- name: Install and setup reflector
  tags: [system, btrfs]
  block:
    - name: Enable btrfs monthly scrub
      shell: systemctl enable btrfs-scrub@-.timer

- name: Enable fstrim.timer
  tags: [system, btrfs]
  block:
    - name: Enable fstrim.timer
      shell: systemctl enable fstrim.timer

- name: Install fwupd
  community.general.pacman:
    name:
      - fwupd
      - udisks2
    state: present
    update_cache: yes

- name: Install network packages
  community.general.pacman:
    name:
      - inetutils
      - whois
    state: present
    update_cache: yes

- name: Install and configure timeshift
  tags: [timeshift]
  block:
    - name: Install timeshift and autosnap
      kewlfft.aur.aur:
        use: paru
        name:
          - timeshift
      become: yes
      become_user: aur_builder

- name: Install and configure timeshift-autosnap
  tags: [timeshift]
  when: timeshift.autosnap.enabled == true
  block:
    - name: Install
      kewlfft.aur.aur:
        use: paru
        name:
          - timeshift-autosnap
      become: yes
      become_user: aur_builder
    - name: Configure timeshift
      community.general.ini_file:
        path: /etc/timeshift-autosnap.conf
        section: null
        no_extra_spaces: true
        option: maxSnapshots
        value: "{{ timeshift.autosnap.maxSnapshots | default('10') }}"
        exclusive: yes

- name: Set up grub
  import_tasks: grub.yml

- name: Set up energy
  import_tasks: energy.yml

- name: Set up security
  import_tasks: security.yml

- name: Set up printing
  import_tasks: printing.yml

- name: Set up audio
  import_tasks: audio.yml

- name: Set up bluetooth
  import_tasks: bluetooth.yml

- name: Set up laptop
  import_tasks: laptop.yml

- name: Set up display
  import_tasks: display.yml

- name: Configure kernel
  import_tasks: kernel.yml

- name: Set up swapfile
  when: swapfile.enabled == true | default(false)
  import_tasks: swapfile.yml
